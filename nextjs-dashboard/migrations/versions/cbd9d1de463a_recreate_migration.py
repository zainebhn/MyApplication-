"""Recreate migration

Revision ID: cbd9d1de463a
Revises: 546786e0840e
Create Date: 2024-08-19 10:47:22.806502

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision = 'cbd9d1de463a'
down_revision = '546786e0840e'
branch_labels = None
depends_on = None

def upgrade():
    conn = op.get_bind()

    # Use SQLAlchemy's text construct for raw SQL
    query = text(
        "SELECT column_name FROM information_schema.columns "
        "WHERE table_name='users' AND column_name='is_validated'"
    )
    
    # Execute the query and check if the column exists
    result = conn.execute(query)
    if not result.fetchone():
        # Column does not exist, so we can safely add it
        with op.batch_alter_table('users', schema=None) as batch_op:
            batch_op.add_column(sa.Column('is_validated', sa.Boolean(), nullable=False))
    else:
        # Column exists, skip adding it
        print("Column 'is_validated' already exists. Skipping column addition.")

    # Perform other column alterations
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['id'])

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('is_validated')
        batch_op.drop_column('password_hash')
    # ### end Alembic commands ###
